name: Build & Test React Application

on:
  push:
    branches: ["frontend"]
  pull_request:
    branches: ["frontend"]

env:
  REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
  REACT_APP_GOOGLE_RECAPTCHA_SITE_KEY: ${{ secrets.REACT_APP_GOOGLE_RECAPTCHA_SITE_KEY }}
  REACT_APP_GOOGLE_RECAPTCHA_SECRET_KEY: ${{ secrets.REACT_APP_GOOGLE_RECAPTCHA_SECRET_KEY }}
  REACT_APP_GOOGLE_API_KEY: ${{ secrets.REACT_APP_GOOGLE_API_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Setup Git Config
        run: |
          git config user.name "Stephen Phyo"
          git config user.email "stephenphyo2019.official@gmail.com"

      - name: Install Dependencies
        run: npm install

      - name: Build React Project
        run: npm run build --if-present
        env:
          CI: false

      - name: Save Version
        id: version
        run: echo ::set-output name=tag

      - name: Login to DockerHub Registry
        uses: docker/login-action@v1
        with:
          username: ${{  secrets.DOCKER_USERNAME }}
          password: ${{  secrets.DOCKER_PASSWORD }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & Push to Docker Hub Repository
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: Dockerfile.prod
          tags: stephenphyo/web-010-phoenix-shop-frontend:latest

  deploy:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Pull Docker Image, Replace & Restart Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_SERVER_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_SERVER_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_SERVER_PASSWORD }}
          script: |
            docker image pull --platform linux/x86_64 docker.io/stephenphyo/web-010-phoenix-shop-frontend
            docker container stop web-010-phoenix-shop-frontend || true
            docker container rm web-010-phoenix-shop-frontend || true
            docker run -d --name web-010-phoenix-shop-frontend --restart unless-stopped -p 3010:80 -p 3510:443 --platform linux/arm64 docker.io/stephenphyo/web-010-phoenix-shop-frontend